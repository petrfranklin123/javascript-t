//exec выполняет поиск совпадений в строке, возвращает массив данных 
//test тестирует совпадения в строке, возвращает либо истину, либо ложь
//match выполняет поиск совпадений в строке, возвращает возвращает массив данных, либо NULL 
//search выполняет поиск совпадений в строке, возвращает возвращает совпадения,, либо -1 если не было найдено 
//replsce выполняет поиск совпадений в строке, заменяет совпавшую подстроку другой подстрокой, переданной строке как аргумент 
//split метод, который использует регулярное выражение или фиксированную строку, чтобы разбить строку на массив подстрок 

//поиск в строке совпадения на ссылку на сторонний ресурс 
function isHaveLink(str){
    let reg = /https?:\/\/.+?\.[a-z]{2,}\s/im;
    return str.match(reg);
}

function checkEmail(email){
    let reg = /^[a-z0-9_][a-z0-9\._-]*[a-z0-9_]*@([a-z0-9]+[a-z0-9_-]*[a-z0-9]+\.)+[a-z0-9]+$/i;
    return email.match(reg);
}

let str1 ='переходите на мой сайт http://aaaaaa.ru ';
let str2 = 'Спасибо за информацию';

if(isHaveLink(str1)){
    console.log(str1);
    console.log("Найдена ссылка в строке");
}

if(isHaveLink(str2)){
    console.log(str2);
    console.log("Найдена ссылка в строке");
}

let email1 = 'petr784512@';
let email2 = 'petr784512@mail.ru';

if(checkEmail(email1)){
    console.log(email1);
    console.log("Корректный email");
}

if(checkEmail(email2)){
    console.log(email2);
    console.log("Корректный email");
}

let money = "У меня в кармане 150 руб и еще 200 руб лежит дома!";

let reg = /\d+/g;
let matches = money.match(reg);
console.log(matches);
for(let key of matches){
    console.log(key);
}

console.log(money.replace(reg, 'N'));
/*
i С этим флагом поиск не зависит от регистра: нет разницы между A и a (см. пример ниже).
g С этим флагом поиск ищет все совпадения, без него – только первое.
m Многострочный режим (рассматривается в главе Многострочный режим якорей ^ $, флаг "m").
s Включает режим «dotall», при котором точка . может соответствовать символу перевода строки \n (рассматривается в главе Символьные классы).
u Включает полную поддержку юникода. Флаг разрешает корректную обработку суррогатных пар (подробнее об этом в главе Юникод: флаг "u" и класс \p{...}).
y Режим поиска на конкретной позиции в тексте (описан в главе Поиск на заданной позиции, флаг "y")
https://learn.javascript.ru/regexp-introduction
*/